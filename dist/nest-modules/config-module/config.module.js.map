{"version":3,"sources":["../../../src/nest-modules/config-module/config.module.ts"],"sourcesContent":["import { Module } from '@nestjs/common';\nimport {\n  ConfigModuleOptions,\n  ConfigModule as NestConfigModule,\n} from '@nestjs/config';\nimport { join } from 'path';\nimport Joi from 'joi';\n\ntype DB_SCHEMA_TYPE = {\n  DB_VENDOR: 'mysql' | 'sqlite';\n  DB_HOST: string;\n  DB_PORT: number;\n  DB_USERNAME: string;\n  DB_PASSWORD: string;\n  DB_DATABASE: string;\n  DB_LOGGING: boolean;\n  DB_AUTO_LOAD_MODELS: boolean;\n};\n\nexport const CONFIG_DB_SCHEMA: Joi.StrictSchemaMap<DB_SCHEMA_TYPE> = {\n  DB_VENDOR: Joi.string().required().valid('mysql', 'sqlite'),\n  DB_HOST: Joi.string().required(),\n  DB_DATABASE: Joi.string().when('DB_VENDOR', {\n    is: 'mysql',\n    then: Joi.required(),\n  }),\n  DB_USERNAME: Joi.string().when('DB_VENDOR', {\n    is: 'mysql',\n    then: Joi.required(),\n  }),\n  DB_PASSWORD: Joi.string().when('DB_VENDOR', {\n    is: 'mysql',\n    then: Joi.required(),\n  }),\n  DB_PORT: Joi.number().integer().when('DB_VENDOR', {\n    is: 'mysql',\n    then: Joi.required(),\n  }),\n  DB_LOGGING: Joi.boolean().required(),\n  DB_AUTO_LOAD_MODELS: Joi.boolean().required(),\n};\n\nexport type CONFIG_SCHEMA_TYPE = DB_SCHEMA_TYPE;\n\n@Module({})\nexport class ConfigModule extends NestConfigModule {\n  static forRoot(options: ConfigModuleOptions = {}) {\n    const { envFilePath, ...otherOptions } = options;\n    return super.forRoot({\n      isGlobal: true,\n      envFilePath: [\n        ...(Array.isArray(envFilePath) ? envFilePath : [envFilePath]),\n        join(process.cwd(), 'envs', `.env.${process.env.NODE_ENV}`),\n        join(process.cwd(), 'envs', '.env'),\n      ],\n      validationSchema: Joi.object({\n        ...CONFIG_DB_SCHEMA,\n      }),\n      ...otherOptions,\n    });\n  }\n}\n"],"names":["CONFIG_DB_SCHEMA","ConfigModule","DB_VENDOR","Joi","string","required","valid","DB_HOST","DB_DATABASE","when","is","then","DB_USERNAME","DB_PASSWORD","DB_PORT","number","integer","DB_LOGGING","boolean","DB_AUTO_LOAD_MODELS","NestConfigModule","forRoot","options","envFilePath","otherOptions","isGlobal","Array","isArray","join","process","cwd","env","NODE_ENV","validationSchema","object","Module"],"mappings":";;;;;;;;;;;IAmBaA,gBAAgB;eAAhBA;;IA0BAC,YAAY;eAAZA;;;wBA7CU;wBAIhB;sBACc;4DACL;;;;;;;;;;;;AAaT,MAAMD,mBAAwD;IACnEE,WAAWC,YAAG,CAACC,MAAM,GAAGC,QAAQ,GAAGC,KAAK,CAAC,SAAS;IAClDC,SAASJ,YAAG,CAACC,MAAM,GAAGC,QAAQ;IAC9BG,aAAaL,YAAG,CAACC,MAAM,GAAGK,IAAI,CAAC,aAAa;QAC1CC,IAAI;QACJC,MAAMR,YAAG,CAACE,QAAQ;IACpB;IACAO,aAAaT,YAAG,CAACC,MAAM,GAAGK,IAAI,CAAC,aAAa;QAC1CC,IAAI;QACJC,MAAMR,YAAG,CAACE,QAAQ;IACpB;IACAQ,aAAaV,YAAG,CAACC,MAAM,GAAGK,IAAI,CAAC,aAAa;QAC1CC,IAAI;QACJC,MAAMR,YAAG,CAACE,QAAQ;IACpB;IACAS,SAASX,YAAG,CAACY,MAAM,GAAGC,OAAO,GAAGP,IAAI,CAAC,aAAa;QAChDC,IAAI;QACJC,MAAMR,YAAG,CAACE,QAAQ;IACpB;IACAY,YAAYd,YAAG,CAACe,OAAO,GAAGb,QAAQ;IAClCc,qBAAqBhB,YAAG,CAACe,OAAO,GAAGb,QAAQ;AAC7C;AAKO,IAAA,AAAMJ,eAAN,MAAMA,qBAAqBmB,oBAAgB;IAChD,OAAOC,QAAQC,UAA+B,CAAC,CAAC,EAAE;QAChD,MAAM,EAAEC,WAAW,EAAE,GAAGC,cAAc,GAAGF;QACzC,OAAO,KAAK,CAACD,QAAQ;YACnBI,UAAU;YACVF,aAAa;mBACPG,MAAMC,OAAO,CAACJ,eAAeA,cAAc;oBAACA;iBAAY;gBAC5DK,IAAAA,UAAI,EAACC,QAAQC,GAAG,IAAI,QAAQ,CAAC,KAAK,EAAED,QAAQE,GAAG,CAACC,QAAQ,CAAC,CAAC;gBAC1DJ,IAAAA,UAAI,EAACC,QAAQC,GAAG,IAAI,QAAQ;aAC7B;YACDG,kBAAkB9B,YAAG,CAAC+B,MAAM,CAAC;gBAC3B,GAAGlC,gBAAgB;YACrB;YACA,GAAGwB,YAAY;QACjB;IACF;AACF;AAhBavB;IADZkC,IAAAA,cAAM,EAAC,CAAC;GACIlC"}