{"version":3,"sources":["../../../../src/nest-modules/database-module/__tests__/database.module.spec.ts"],"sourcesContent":["import { Test } from '@nestjs/testing';\nimport { DatabaseModule } from '../database.module';\nimport { getConnectionToken } from '@nestjs/sequelize';\nimport { Sequelize } from 'sequelize-typescript';\nimport { ConfigModule } from '../../config-module/config.module';\n\ndescribe('DatabaseModule Unit Tests', () => {\n  describe('sqlite connection', () => {\n    const connOptions = {\n      DB_VENDOR: 'sqlite',\n      DB_HOST: ':memory:',\n      DB_LOGGING: false,\n      DB_AUTO_LOAD_MODELS: true,\n    };\n\n    it('should be a sqlite connection', async () => {\n      const module = await Test.createTestingModule({\n        imports: [\n          DatabaseModule,\n          ConfigModule.forRoot({\n            isGlobal: true,\n            ignoreEnvFile: true,\n            ignoreEnvVars: true,\n            validationSchema: null,\n            load: [() => connOptions],\n          }),\n        ],\n      }).compile();\n\n      const app = module.createNestApplication();\n      const conn = app.get<Sequelize>(getConnectionToken());\n      expect(conn).toBeDefined();\n      expect(conn.options.dialect).toBe('sqlite');\n      expect(conn.options.host).toBe(':memory:');\n      await conn.close();\n    });\n  });\n\n  describe('mysql connection', () => {\n    const connOptions = {\n      DB_VENDOR: 'mysql',\n      DB_HOST: 'db',\n      DB_DATABASE: 'wise360pro',\n      DB_USERNAME: 'root',\n      DB_PASSWORD: 'root',\n      DB_PORT: 3306,\n      DB_LOGGING: false,\n      DB_AUTO_LOAD_MODELS: true,\n    };\n\n    it('should be a mysql connection', async () => {\n      const module = await Test.createTestingModule({\n        imports: [\n          DatabaseModule,\n          ConfigModule.forRoot({\n            isGlobal: true,\n            ignoreEnvFile: true,\n            ignoreEnvVars: true,\n            validationSchema: null,\n            load: [() => connOptions],\n          }),\n        ],\n      }).compile();\n\n      const app = module.createNestApplication();\n      const conn = app.get<Sequelize>(getConnectionToken());\n      expect(conn).toBeDefined();\n      expect(conn.options.dialect).toBe(connOptions.DB_VENDOR);\n      expect(conn.options.host).toBe(connOptions.DB_HOST);\n      expect(conn.options.database).toBe(connOptions.DB_DATABASE);\n      expect(conn.options.username).toBe(connOptions.DB_USERNAME);\n      expect(conn.options.password).toBe(connOptions.DB_PASSWORD);\n      expect(conn.options.port).toBe(connOptions.DB_PORT);\n      await conn.close();\n    });\n  });\n});\n"],"names":["describe","connOptions","DB_VENDOR","DB_HOST","DB_LOGGING","DB_AUTO_LOAD_MODELS","it","module","Test","createTestingModule","imports","DatabaseModule","ConfigModule","forRoot","isGlobal","ignoreEnvFile","ignoreEnvVars","validationSchema","load","compile","app","createNestApplication","conn","get","getConnectionToken","expect","toBeDefined","options","dialect","toBe","host","close","DB_DATABASE","DB_USERNAME","DB_PASSWORD","DB_PORT","database","username","password","port"],"mappings":";;;;yBAAqB;gCACU;2BACI;8BAEN;AAE7BA,SAAS,6BAA6B;IACpCA,SAAS,qBAAqB;QAC5B,MAAMC,cAAc;YAClBC,WAAW;YACXC,SAAS;YACTC,YAAY;YACZC,qBAAqB;QACvB;QAEAC,GAAG,iCAAiC;YAClC,MAAMC,SAAS,MAAMC,aAAI,CAACC,mBAAmB,CAAC;gBAC5CC,SAAS;oBACPC,8BAAc;oBACdC,0BAAY,CAACC,OAAO,CAAC;wBACnBC,UAAU;wBACVC,eAAe;wBACfC,eAAe;wBACfC,kBAAkB;wBAClBC,MAAM;4BAAC,IAAMjB;yBAAY;oBAC3B;iBACD;YACH,GAAGkB,OAAO;YAEV,MAAMC,MAAMb,OAAOc,qBAAqB;YACxC,MAAMC,OAAOF,IAAIG,GAAG,CAAYC,IAAAA,6BAAkB;YAClDC,OAAOH,MAAMI,WAAW;YACxBD,OAAOH,KAAKK,OAAO,CAACC,OAAO,EAAEC,IAAI,CAAC;YAClCJ,OAAOH,KAAKK,OAAO,CAACG,IAAI,EAAED,IAAI,CAAC;YAC/B,MAAMP,KAAKS,KAAK;QAClB;IACF;IAEA/B,SAAS,oBAAoB;QAC3B,MAAMC,cAAc;YAClBC,WAAW;YACXC,SAAS;YACT6B,aAAa;YACbC,aAAa;YACbC,aAAa;YACbC,SAAS;YACT/B,YAAY;YACZC,qBAAqB;QACvB;QAEAC,GAAG,gCAAgC;YACjC,MAAMC,SAAS,MAAMC,aAAI,CAACC,mBAAmB,CAAC;gBAC5CC,SAAS;oBACPC,8BAAc;oBACdC,0BAAY,CAACC,OAAO,CAAC;wBACnBC,UAAU;wBACVC,eAAe;wBACfC,eAAe;wBACfC,kBAAkB;wBAClBC,MAAM;4BAAC,IAAMjB;yBAAY;oBAC3B;iBACD;YACH,GAAGkB,OAAO;YAEV,MAAMC,MAAMb,OAAOc,qBAAqB;YACxC,MAAMC,OAAOF,IAAIG,GAAG,CAAYC,IAAAA,6BAAkB;YAClDC,OAAOH,MAAMI,WAAW;YACxBD,OAAOH,KAAKK,OAAO,CAACC,OAAO,EAAEC,IAAI,CAAC5B,YAAYC,SAAS;YACvDuB,OAAOH,KAAKK,OAAO,CAACG,IAAI,EAAED,IAAI,CAAC5B,YAAYE,OAAO;YAClDsB,OAAOH,KAAKK,OAAO,CAACS,QAAQ,EAAEP,IAAI,CAAC5B,YAAY+B,WAAW;YAC1DP,OAAOH,KAAKK,OAAO,CAACU,QAAQ,EAAER,IAAI,CAAC5B,YAAYgC,WAAW;YAC1DR,OAAOH,KAAKK,OAAO,CAACW,QAAQ,EAAET,IAAI,CAAC5B,YAAYiC,WAAW;YAC1DT,OAAOH,KAAKK,OAAO,CAACY,IAAI,EAAEV,IAAI,CAAC5B,YAAYkC,OAAO;YAClD,MAAMb,KAAKS,KAAK;QAClB;IACF;AACF"}