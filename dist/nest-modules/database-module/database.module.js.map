{"version":3,"sources":["../../../src/nest-modules/database-module/database.module.ts"],"sourcesContent":["import { TenantModel } from '@core/tenant/infra/db/sequelize/tenant.model';\nimport { Module } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { SequelizeModule } from '@nestjs/sequelize';\nimport { CONFIG_SCHEMA_TYPE } from '../config-module/config.module';\n\nconst models = [TenantModel];\n\n@Module({\n  imports: [\n    SequelizeModule.forRootAsync({\n      useFactory: (configService: ConfigService<CONFIG_SCHEMA_TYPE>) => {\n        const dbVendor = configService.get('DB_VENDOR');\n        if (dbVendor === 'sqlite') {\n          return {\n            dialect: 'sqlite',\n            host: configService.get('DB_HOST'),\n            models,\n            logging: configService.get('DB_LOGGING'),\n            autoLoadModels: configService.get('DB_AUTO_LOAD_MODELS'),\n          };\n        }\n\n        if (dbVendor === 'mysql') {\n          return {\n            dialect: 'mysql',\n            host: configService.get('DB_HOST'),\n            port: configService.get('DB_PORT'),\n            username: configService.get('DB_USERNAME'),\n            password: configService.get('DB_PASSWORD'),\n            database: configService.get('DB_DATABASE'),\n            models,\n            logging: configService.get('DB_LOGGING'),\n            autoLoadModels: configService.get('DB_AUTO_LOAD_MODELS'),\n          };\n        }\n\n        throw new Error(`Unsupported database configuration: ${dbVendor}`);\n      },\n      inject: [ConfigService],\n    }),\n  ],\n})\nexport class DatabaseModule {}\n"],"names":["DatabaseModule","models","TenantModel","Module","imports","SequelizeModule","forRootAsync","useFactory","configService","dbVendor","get","dialect","host","logging","autoLoadModels","port","username","password","database","Error","inject","ConfigService"],"mappings":";;;;+BA2CaA;;;eAAAA;;;6BA3Ce;wBACL;wBACO;2BACE;;;;;;;AAGhC,MAAMC,SAAS;IAACC,wBAAW;CAAC;AAqCrB,IAAA,AAAMF,iBAAN,MAAMA;AAAgB;AAAhBA;IAnCZG,IAAAA,cAAM,EAAC;QACNC,SAAS;YACPC,0BAAe,CAACC,YAAY,CAAC;gBAC3BC,YAAY,CAACC;oBACX,MAAMC,WAAWD,cAAcE,GAAG,CAAC;oBACnC,IAAID,aAAa,UAAU;wBACzB,OAAO;4BACLE,SAAS;4BACTC,MAAMJ,cAAcE,GAAG,CAAC;4BACxBT;4BACAY,SAASL,cAAcE,GAAG,CAAC;4BAC3BI,gBAAgBN,cAAcE,GAAG,CAAC;wBACpC;oBACF;oBAEA,IAAID,aAAa,SAAS;wBACxB,OAAO;4BACLE,SAAS;4BACTC,MAAMJ,cAAcE,GAAG,CAAC;4BACxBK,MAAMP,cAAcE,GAAG,CAAC;4BACxBM,UAAUR,cAAcE,GAAG,CAAC;4BAC5BO,UAAUT,cAAcE,GAAG,CAAC;4BAC5BQ,UAAUV,cAAcE,GAAG,CAAC;4BAC5BT;4BACAY,SAASL,cAAcE,GAAG,CAAC;4BAC3BI,gBAAgBN,cAAcE,GAAG,CAAC;wBACpC;oBACF;oBAEA,MAAM,IAAIS,MAAM,CAAC,oCAAoC,EAAEV,SAAS,CAAC;gBACnE;gBACAW,QAAQ;oBAACC,qBAAa;iBAAC;YACzB;SACD;IACH;GACarB"}