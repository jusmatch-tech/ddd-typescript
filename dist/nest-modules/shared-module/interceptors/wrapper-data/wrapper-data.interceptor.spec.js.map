{"version":3,"sources":["../../../../../src/nest-modules/shared-module/interceptors/wrapper-data/wrapper-data.interceptor.spec.ts"],"sourcesContent":["import { lastValueFrom, of } from 'rxjs';\nimport { WrapperDataInterceptor } from './wrapper-data.interceptor';\n\ndescribe('WrapperDataInterceptor', () => {\n  let interceptor: WrapperDataInterceptor;\n\n  beforeEach(() => {\n    interceptor = new WrapperDataInterceptor();\n  });\n  it('should wrapper with data key', async () => {\n    expect(interceptor).toBeDefined();\n    const obs$ = interceptor.intercept({} as any, {\n      handle: () => of({ name: 'test' }),\n    });\n    // como observable não é uma promise nos usamos o lastValueFrom \n    //para pegar o valor do observable e transformar em uma promise\n    const result = await lastValueFrom(obs$);\n    expect(result).toEqual({ data: { name: 'test' } });\n  });\n\n  it('should not wrapper with meta key', async () => {\n    expect(interceptor).toBeDefined();\n    const obs$ = interceptor.intercept({} as any, {\n      handle: () => of({ name: 'test', meta: {} }),\n    });\n    const result = await lastValueFrom(obs$);\n    expect(result).toEqual({ name: 'test', meta: {} });\n  });\n});\n"],"names":["describe","interceptor","beforeEach","WrapperDataInterceptor","it","expect","toBeDefined","obs$","intercept","handle","of","name","result","lastValueFrom","toEqual","data","meta"],"mappings":";;;;sBAAkC;wCACK;AAEvCA,SAAS,0BAA0B;IACjC,IAAIC;IAEJC,WAAW;QACTD,cAAc,IAAIE,8CAAsB;IAC1C;IACAC,GAAG,gCAAgC;QACjCC,OAAOJ,aAAaK,WAAW;QAC/B,MAAMC,OAAON,YAAYO,SAAS,CAAC,CAAC,GAAU;YAC5CC,QAAQ,IAAMC,IAAAA,QAAE,EAAC;oBAAEC,MAAM;gBAAO;QAClC;QACA,gEAAgE;QAChE,+DAA+D;QAC/D,MAAMC,SAAS,MAAMC,IAAAA,mBAAa,EAACN;QACnCF,OAAOO,QAAQE,OAAO,CAAC;YAAEC,MAAM;gBAAEJ,MAAM;YAAO;QAAE;IAClD;IAEAP,GAAG,oCAAoC;QACrCC,OAAOJ,aAAaK,WAAW;QAC/B,MAAMC,OAAON,YAAYO,SAAS,CAAC,CAAC,GAAU;YAC5CC,QAAQ,IAAMC,IAAAA,QAAE,EAAC;oBAAEC,MAAM;oBAAQK,MAAM,CAAC;gBAAE;QAC5C;QACA,MAAMJ,SAAS,MAAMC,IAAAA,mBAAa,EAACN;QACnCF,OAAOO,QAAQE,OAAO,CAAC;YAAEH,MAAM;YAAQK,MAAM,CAAC;QAAE;IAClD;AACF"}