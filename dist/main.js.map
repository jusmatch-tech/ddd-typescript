{"version":3,"sources":["../src/main.ts"],"sourcesContent":["import { NestFactory, Reflector } from '@nestjs/core';\nimport { AppModule } from './app.module';\nimport { ClassSerializerInterceptor, ValidationPipe } from '@nestjs/common';\nimport { WrapperDataInterceptor } from './nest-modules/shared-module/interceptors/wrapper-data/wrapper-data.interceptor';\nimport { NotFoundErrorFilter } from './nest-modules/shared-module/not-found/not-found-error.filter';\nimport { EntityValidationErrorFilter } from './nest-modules/shared-module/not-found/entity-validation-error.filter';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n\n  // como já tem uma class atribuida na entrada do controller, o pipes já vai hidratar o input e validar os dados\n  app.useGlobalPipes(\n    new ValidationPipe({\n      errorHttpStatusCode: 422,\n    }),\n  );\n\n  //global Interceptor é parecido com um middleware, ele intercepta a requisição e a resposta\n  app.useGlobalInterceptors(new ClassSerializerInterceptor(app.get(Reflector)));\n  app.useGlobalInterceptors(new WrapperDataInterceptor());\n  app.useGlobalFilters(\n    new NotFoundErrorFilter(),\n    new EntityValidationErrorFilter(),\n  );\n\n  await app.listen(3000);\n}\nbootstrap();\n"],"names":["bootstrap","app","NestFactory","create","AppModule","useGlobalPipes","ValidationPipe","errorHttpStatusCode","useGlobalInterceptors","ClassSerializerInterceptor","get","Reflector","WrapperDataInterceptor","useGlobalFilters","NotFoundErrorFilter","EntityValidationErrorFilter","listen"],"mappings":";;;;sBAAuC;2BACb;wBACiC;wCACpB;qCACH;6CACQ;AAE5C,eAAeA;IACb,MAAMC,MAAM,MAAMC,iBAAW,CAACC,MAAM,CAACC,oBAAS;IAE9C,+GAA+G;IAC/GH,IAAII,cAAc,CAChB,IAAIC,sBAAc,CAAC;QACjBC,qBAAqB;IACvB;IAGF,2FAA2F;IAC3FN,IAAIO,qBAAqB,CAAC,IAAIC,kCAA0B,CAACR,IAAIS,GAAG,CAACC,eAAS;IAC1EV,IAAIO,qBAAqB,CAAC,IAAII,8CAAsB;IACpDX,IAAIY,gBAAgB,CAClB,IAAIC,wCAAmB,IACvB,IAAIC,wDAA2B;IAGjC,MAAMd,IAAIe,MAAM,CAAC;AACnB;AACAhB"}