{"version":3,"sources":["../../../../../../../src/core/tenant/application/use-case/get-tenant/__tests__/get-tenant.use-case.int-spec.ts"],"sourcesContent":["import { NotFoundError } from \"../../../../../shared/domain/errors/not-found.error\";\nimport { setupSequelize } from \"../../../../../shared/infra/testing/helpers\";\nimport { Tenant } from \"../../../../domain/tenant.entity\";\nimport { TenantSequelizeRepository } from \"../../../../infra/db/sequelize/tenant-sequelize.repository\";\nimport { TenantModel } from \"../../../../infra/db/sequelize/tenant.model\";\nimport { GetTenantUseCase } from \"../get-tenant.use-case\";\n\ndescribe('GetTenantUseCase Integration tests', () => {\n  let useCase: GetTenantUseCase;\n  let repository: TenantSequelizeRepository;\n\n  setupSequelize( {models: [TenantModel]});\n\n  beforeEach(() => {\n    repository = new TenantSequelizeRepository(TenantModel);\n    useCase = new GetTenantUseCase(repository);\n  });\n\n  it('Should Throw error when entity not found', async () => { \n    const input = {\n      id: 'f0b8b6c4-aae6-4a0d-8d6e-6d8b1a8c8e4a',\n    };\n    await expect(useCase.execute(input)).rejects.toThrow(new NotFoundError(input.id, Tenant)); \n  });\n\n  it('Should get an Tenant', async () => {\n    const entity = Tenant.fake().aTenant().build();\n    await repository.insert(entity);\n\n    let output = await useCase.execute({\n      id: entity.tenant_id.id,\n    });\n    expect(output).toStrictEqual({\n      id: entity.tenant_id.id,\n      name: entity.name,\n      description: entity.description,\n      is_active: entity.is_active,\n      created_at: entity.created_at,\n      updated_at: entity.updated_at\n    });\n  });\n});"],"names":["describe","useCase","repository","setupSequelize","models","TenantModel","beforeEach","TenantSequelizeRepository","GetTenantUseCase","it","input","id","expect","execute","rejects","toThrow","NotFoundError","Tenant","entity","fake","aTenant","build","insert","output","tenant_id","toStrictEqual","name","description","is_active","created_at","updated_at"],"mappings":";;;;+BAA8B;yBACC;8BACR;2CACmB;6BACd;kCACK;AAEjCA,SAAS,sCAAsC;IAC7C,IAAIC;IACJ,IAAIC;IAEJC,IAAAA,uBAAc,EAAE;QAACC,QAAQ;YAACC,wBAAW;SAAC;IAAA;IAEtCC,WAAW;QACTJ,aAAa,IAAIK,oDAAyB,CAACF,wBAAW;QACtDJ,UAAU,IAAIO,kCAAgB,CAACN;IACjC;IAEAO,GAAG,4CAA4C;QAC7C,MAAMC,QAAQ;YACZC,IAAI;QACN;QACA,MAAMC,OAAOX,QAAQY,OAAO,CAACH,QAAQI,OAAO,CAACC,OAAO,CAAC,IAAIC,4BAAa,CAACN,MAAMC,EAAE,EAAEM,oBAAM;IACzF;IAEAR,GAAG,wBAAwB;QACzB,MAAMS,SAASD,oBAAM,CAACE,IAAI,GAAGC,OAAO,GAAGC,KAAK;QAC5C,MAAMnB,WAAWoB,MAAM,CAACJ;QAExB,IAAIK,SAAS,MAAMtB,QAAQY,OAAO,CAAC;YACjCF,IAAIO,OAAOM,SAAS,CAACb,EAAE;QACzB;QACAC,OAAOW,QAAQE,aAAa,CAAC;YAC3Bd,IAAIO,OAAOM,SAAS,CAACb,EAAE;YACvBe,MAAMR,OAAOQ,IAAI;YACjBC,aAAaT,OAAOS,WAAW;YAC/BC,WAAWV,OAAOU,SAAS;YAC3BC,YAAYX,OAAOW,UAAU;YAC7BC,YAAYZ,OAAOY,UAAU;QAC/B;IACF;AACF"}