{"version":3,"sources":["../../../../../../../src/core/tenant/application/use-case/create-tenant/__tests__/create-tenant.use-case.int-spec.ts"],"sourcesContent":["import { Uuid } from '../../../../../shared/domain/value-objects/uuid.vo';\nimport { setupSequelize } from \"../../../../../shared/infra/testing/helpers\";\nimport { TenantInMemoryRepository } from \"../../../../infra/db/in-memory/tenant-in-memory.repository\";\nimport { TenantSequelizeRepository } from \"../../../../infra/db/sequelize/tenant-sequelize.repository\";\nimport { TenantModel } from \"../../../../infra/db/sequelize/tenant.model\";\nimport { CreateTenantUseCase } from \"../create-tenant.use-case\";\n\ndescribe('CreateTenantUseCase Integration Tests', () => {\n  let useCase: CreateTenantUseCase;\n  let repository: TenantSequelizeRepository;\n\n  setupSequelize({ models: [TenantModel] });\n\n  beforeEach(() => {\n    repository = new TenantSequelizeRepository(TenantModel);\n    useCase = new CreateTenantUseCase(repository);\n  });\n\n  it ('should create a new tenant', async () => {\n    let output = await useCase.execute({ name: 'test' });\n    let entity = await repository.findById(new Uuid(output.id));\n    expect(output).toStrictEqual({\n      id: entity.tenant_id.id,\n      name: entity.name,\n      description: entity.description,\n      is_active: entity.is_active,\n      created_at: entity.created_at,\n      updated_at: entity.updated_at\n    });\n\n    output = await useCase.execute({ \n      name: 'test2', \n      description: 'test description', \n    });\n    entity = await repository.findById(new Uuid(output.id));\n    expect(output).toStrictEqual({\n      id: entity.tenant_id.id,\n      name: entity.name,\n      description: entity.description,\n      is_active: entity.is_active,\n      created_at: entity.created_at,\n      updated_at: entity.updated_at\n    });\n\n    output = await useCase.execute({ \n      name: 'test3', \n      description: 'test description',\n      is_active: false, \n    });\n    entity = await repository.findById(new Uuid(output.id));\n    expect(output).toStrictEqual({\n      id: entity.tenant_id.id,\n      name: entity.name,\n      description: entity.description,\n      is_active: entity.is_active,\n      created_at: entity.created_at,\n      updated_at: entity.updated_at\n    });\n\n    output = await useCase.execute({\n      name: 'test4',\n      description: 'test description',\n      is_active: true,\n    });\n    entity = await repository.findById(new Uuid(output.id));\n    expect(output).toStrictEqual({\n      id: entity.tenant_id.id,\n      name: entity.name,\n      description: entity.description,\n      is_active: entity.is_active,\n      created_at: entity.created_at,\n      updated_at: entity.updated_at\n    });\n\n  });\n\n});\n"],"names":["describe","useCase","repository","setupSequelize","models","TenantModel","beforeEach","TenantSequelizeRepository","CreateTenantUseCase","it","output","execute","name","entity","findById","Uuid","id","expect","toStrictEqual","tenant_id","description","is_active","created_at","updated_at"],"mappings":";;;;wBAAqB;yBACU;2CAEW;6BACd;qCACQ;AAEpCA,SAAS,yCAAyC;IAChD,IAAIC;IACJ,IAAIC;IAEJC,IAAAA,uBAAc,EAAC;QAAEC,QAAQ;YAACC,wBAAW;SAAC;IAAC;IAEvCC,WAAW;QACTJ,aAAa,IAAIK,oDAAyB,CAACF,wBAAW;QACtDJ,UAAU,IAAIO,wCAAmB,CAACN;IACpC;IAEAO,GAAI,8BAA8B;QAChC,IAAIC,SAAS,MAAMT,QAAQU,OAAO,CAAC;YAAEC,MAAM;QAAO;QAClD,IAAIC,SAAS,MAAMX,WAAWY,QAAQ,CAAC,IAAIC,YAAI,CAACL,OAAOM,EAAE;QACzDC,OAAOP,QAAQQ,aAAa,CAAC;YAC3BF,IAAIH,OAAOM,SAAS,CAACH,EAAE;YACvBJ,MAAMC,OAAOD,IAAI;YACjBQ,aAAaP,OAAOO,WAAW;YAC/BC,WAAWR,OAAOQ,SAAS;YAC3BC,YAAYT,OAAOS,UAAU;YAC7BC,YAAYV,OAAOU,UAAU;QAC/B;QAEAb,SAAS,MAAMT,QAAQU,OAAO,CAAC;YAC7BC,MAAM;YACNQ,aAAa;QACf;QACAP,SAAS,MAAMX,WAAWY,QAAQ,CAAC,IAAIC,YAAI,CAACL,OAAOM,EAAE;QACrDC,OAAOP,QAAQQ,aAAa,CAAC;YAC3BF,IAAIH,OAAOM,SAAS,CAACH,EAAE;YACvBJ,MAAMC,OAAOD,IAAI;YACjBQ,aAAaP,OAAOO,WAAW;YAC/BC,WAAWR,OAAOQ,SAAS;YAC3BC,YAAYT,OAAOS,UAAU;YAC7BC,YAAYV,OAAOU,UAAU;QAC/B;QAEAb,SAAS,MAAMT,QAAQU,OAAO,CAAC;YAC7BC,MAAM;YACNQ,aAAa;YACbC,WAAW;QACb;QACAR,SAAS,MAAMX,WAAWY,QAAQ,CAAC,IAAIC,YAAI,CAACL,OAAOM,EAAE;QACrDC,OAAOP,QAAQQ,aAAa,CAAC;YAC3BF,IAAIH,OAAOM,SAAS,CAACH,EAAE;YACvBJ,MAAMC,OAAOD,IAAI;YACjBQ,aAAaP,OAAOO,WAAW;YAC/BC,WAAWR,OAAOQ,SAAS;YAC3BC,YAAYT,OAAOS,UAAU;YAC7BC,YAAYV,OAAOU,UAAU;QAC/B;QAEAb,SAAS,MAAMT,QAAQU,OAAO,CAAC;YAC7BC,MAAM;YACNQ,aAAa;YACbC,WAAW;QACb;QACAR,SAAS,MAAMX,WAAWY,QAAQ,CAAC,IAAIC,YAAI,CAACL,OAAOM,EAAE;QACrDC,OAAOP,QAAQQ,aAAa,CAAC;YAC3BF,IAAIH,OAAOM,SAAS,CAACH,EAAE;YACvBJ,MAAMC,OAAOD,IAAI;YACjBQ,aAAaP,OAAOO,WAAW;YAC/BC,WAAWR,OAAOQ,SAAS;YAC3BC,YAAYT,OAAOS,UAAU;YAC7BC,YAAYV,OAAOU,UAAU;QAC/B;IAEF;AAEF"}