{"version":3,"sources":["../../../../../../../src/core/tenant/application/use-case/create-tenant/__tests__/create-tenant.use-case.spec.ts"],"sourcesContent":["import { TenantInMemoryRepository } from \"../../../../infra/db/in-memory/tenant-in-memory.repository\";\nimport { CreateTenantUseCase } from \"../create-tenant.use-case\";\n\ndescribe('CreateTenantUseCase Unit Tests', () => {\n  let useCase: CreateTenantUseCase;\n  let repository: TenantInMemoryRepository;\n\n  beforeEach(() => {\n    repository = new TenantInMemoryRepository();\n    useCase = new CreateTenantUseCase(repository);\n  });\n\n  it('should create a new tenant', async () => {\n    const spyInsert = jest.spyOn(repository, 'insert');\n    let output = await useCase.execute({ name: 'test' });\n    expect(spyInsert).toHaveBeenCalledTimes(1);\n    expect(output).toStrictEqual({\n      id: repository.items[0].tenant_id.id,\n      name: 'test',\n      description: null,\n      is_active: true, \n      created_at: repository.items[0].created_at,\n      updated_at: repository.items[0].updated_at\n    });\n\n    output = await useCase.execute({ \n      name: 'test2', \n      description: 'test description', \n      is_active: false,\n    });\n    expect(spyInsert).toHaveBeenCalledTimes(2);\n\n    expect(output).toStrictEqual({\n      id: repository.items[1].tenant_id.id,\n      name: 'test2',\n      description: 'test description',\n      is_active: false, \n      created_at: repository.items[1].created_at,\n      updated_at: repository.items[1].updated_at\n    });\n  });\n\n});"],"names":["describe","useCase","repository","beforeEach","TenantInMemoryRepository","CreateTenantUseCase","it","spyInsert","jest","spyOn","output","execute","name","expect","toHaveBeenCalledTimes","toStrictEqual","id","items","tenant_id","description","is_active","created_at","updated_at"],"mappings":";;;;0CAAyC;qCACL;AAEpCA,SAAS,kCAAkC;IACzC,IAAIC;IACJ,IAAIC;IAEJC,WAAW;QACTD,aAAa,IAAIE,kDAAwB;QACzCH,UAAU,IAAII,wCAAmB,CAACH;IACpC;IAEAI,GAAG,8BAA8B;QAC/B,MAAMC,YAAYC,KAAKC,KAAK,CAACP,YAAY;QACzC,IAAIQ,SAAS,MAAMT,QAAQU,OAAO,CAAC;YAAEC,MAAM;QAAO;QAClDC,OAAON,WAAWO,qBAAqB,CAAC;QACxCD,OAAOH,QAAQK,aAAa,CAAC;YAC3BC,IAAId,WAAWe,KAAK,CAAC,EAAE,CAACC,SAAS,CAACF,EAAE;YACpCJ,MAAM;YACNO,aAAa;YACbC,WAAW;YACXC,YAAYnB,WAAWe,KAAK,CAAC,EAAE,CAACI,UAAU;YAC1CC,YAAYpB,WAAWe,KAAK,CAAC,EAAE,CAACK,UAAU;QAC5C;QAEAZ,SAAS,MAAMT,QAAQU,OAAO,CAAC;YAC7BC,MAAM;YACNO,aAAa;YACbC,WAAW;QACb;QACAP,OAAON,WAAWO,qBAAqB,CAAC;QAExCD,OAAOH,QAAQK,aAAa,CAAC;YAC3BC,IAAId,WAAWe,KAAK,CAAC,EAAE,CAACC,SAAS,CAACF,EAAE;YACpCJ,MAAM;YACNO,aAAa;YACbC,WAAW;YACXC,YAAYnB,WAAWe,KAAK,CAAC,EAAE,CAACI,UAAU;YAC1CC,YAAYpB,WAAWe,KAAK,CAAC,EAAE,CAACK,UAAU;QAC5C;IACF;AAEF"}