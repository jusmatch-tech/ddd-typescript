{"version":3,"sources":["../../../../src/core/tenant/domain/tenant-fake.builders.ts"],"sourcesContent":["import { Chance } from 'chance';\nimport { Tenant } from './tenant.entity';\nimport { Uuid } from '../../shared/domain/value-objects/uuid.vo';\n\ntype PropOrFactory<T> = T | ((index: number) => T);\n\nexport class TenantFakeBuilder<TBuild = any> {\n  // auto generated in entity\n  private _tenant_id: PropOrFactory<Uuid> | undefined = undefined;\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  private _name: PropOrFactory<string> = (_index) => this.chance.word();\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  private _description: PropOrFactory<string | null> = (_index) =>\n    this.chance.paragraph();\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  private _is_active: PropOrFactory<boolean> = (_index) => true;\n  // auto generated in entity\n  private _created_at: PropOrFactory<Date> | undefined = undefined;\n  // auto generated in entity\n  private _updated_at: PropOrFactory<Date> | undefined = undefined;\n\n  private countObjs;\n\n  static aTenant() {\n    return new TenantFakeBuilder<Tenant>();\n  }\n\n  static theTenants(countObjs: number) {\n    return new TenantFakeBuilder<Tenant[]>(countObjs);\n  }\n\n  private chance: Chance.Chance;\n\n  private constructor(countObjs: number = 1) {\n    this.countObjs = countObjs;\n    this.chance = Chance();\n  }\n\n  withUuid(valueOrFactory: PropOrFactory<Uuid>) {\n    this._tenant_id = valueOrFactory;\n    return this;\n  }\n\n  withName(valueOrFactory: PropOrFactory<string>) {\n    this._name = valueOrFactory;\n    return this;\n  }\n\n  withDescription(valueOrFactory: PropOrFactory<string | null>) {\n    this._description = valueOrFactory;\n    return this;\n  }\n\n  activate() {\n    this._is_active = true;\n    return this;\n  }\n\n  deactivate() {\n    this._is_active = false;\n    return this;\n  }\n\n  withCreatedAt(valueOrFactory: PropOrFactory<Date>) {\n    this._created_at = valueOrFactory;\n    return this;\n  }\n  \n  withUpdatedAt(valueOrFactory: PropOrFactory<Date>) {\n    this._updated_at = valueOrFactory;\n    return this;\n  }\n\n  withInvalidNameTooLong(value?: string) {\n    this._name = value ?? this.chance.word({ length: 256 });\n    return this;\n  }\n\n  build(): TBuild {\n    const tenants = new Array(this.countObjs)\n      .fill(undefined)\n      .map((_, index) => {\n        const tenant = new Tenant({\n          tenant_id: !this._tenant_id\n            ? undefined\n            : this.callFactory(this._tenant_id, index),\n          name: this.callFactory(this._name, index),\n          description: this.callFactory(this._description, index),\n          is_active: this.callFactory(this._is_active, index),\n          ...(this._created_at && {\n            created_at: this.callFactory(this._created_at, index),\n          }),\n          ...(this._updated_at && {\n            updated_at: this.callFactory(this._updated_at, index),\n          }),\n        });\n        tenant.validate();\n        return tenant;\n      });\n    return this.countObjs === 1 ? (tenants[0] as any) : tenants;\n  }\n\n  get tenant_id() {\n    return this.getValue('tenant_id');\n  }\n\n  get name() {\n    return this.getValue('name');\n  }\n\n  get description() {\n    return this.getValue('description');\n  }\n\n  get is_active() {\n    return this.getValue('is_active');\n  }\n\n  get created_at() {\n    return this.getValue('created_at');\n  }\n\n  get updated_at() {\n    return this.getValue('updated_at');\n  }\n\n  private getValue(prop: any) {\n    const optional = ['tenant_id', 'created_at', 'updated_at'];\n    const privateProp = `_${prop}` as keyof this;\n    if (!this[privateProp] && optional.includes(prop)) {\n      throw new Error(\n        `Property ${prop} not have a factory, use 'with' methods`,\n      );\n    }\n    return this.callFactory(this[privateProp], 0);\n  }\n\n  private callFactory(factoryOrValue: PropOrFactory<any>, index: number) {\n    return typeof factoryOrValue === 'function'\n      ? factoryOrValue(index)\n      : factoryOrValue;\n  }\n}"],"names":["TenantFakeBuilder","aTenant","theTenants","countObjs","withUuid","valueOrFactory","_tenant_id","withName","_name","withDescription","_description","activate","_is_active","deactivate","withCreatedAt","_created_at","withUpdatedAt","_updated_at","withInvalidNameTooLong","value","chance","word","length","build","tenants","Array","fill","undefined","map","_","index","tenant","Tenant","tenant_id","callFactory","name","description","is_active","created_at","updated_at","validate","getValue","prop","optional","privateProp","includes","Error","factoryOrValue","_index","paragraph","Chance"],"mappings":"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"}