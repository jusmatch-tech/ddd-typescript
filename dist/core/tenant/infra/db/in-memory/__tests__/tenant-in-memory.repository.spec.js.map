{"version":3,"sources":["../../../../../../../src/core/tenant/infra/db/in-memory/__tests__/tenant-in-memory.repository.spec.ts"],"sourcesContent":["import { Tenant } from \"../../../../domain/tenant.entity\";\nimport { TenantInMemoryRepository } from \"../tenant-in-memory.repository\";\n\ndescribe('TenantInMemoryRepository', () => {\n  let repository: TenantInMemoryRepository;\n\n  beforeEach(() => (repository = new TenantInMemoryRepository()));\n  it('should no filter items when filter object is null', async () => {\n    const items = [Tenant.fake().aTenant().build()];\n    const filterSpy = jest.spyOn(items, 'filter' as any);\n\n    const itemsFiltered = await repository['applyFilter'](items, null);\n    expect(filterSpy).not.toHaveBeenCalled();\n    expect(itemsFiltered).toStrictEqual(items);\n  });\n\n  it('should filter items using filter parameter', async () => {\n    const items = [\n      Tenant.fake().aTenant().withName('test').build(),\n      Tenant.fake().aTenant().withName('TEST').build(),\n      Tenant.fake().aTenant().withName('fake').build(),\n    ];\n    const filterSpy = jest.spyOn(items, 'filter' as any);\n\n    const itemsFiltered = await repository['applyFilter'](items, 'TEST');\n    expect(filterSpy).toHaveBeenCalledTimes(1);\n    expect(itemsFiltered).toStrictEqual([items[0], items[1]]);\n  });\n\n  it('should sort by created_at when sort param is null', async () => {\n    const created_at = new Date();\n\n    const items = [\n      Tenant.fake()\n        .aTenant()\n        .withName('test')\n        .withCreatedAt(created_at)\n        .build(),\n      Tenant.fake()\n        .aTenant()\n        .withName('TEST')\n        .withCreatedAt(new Date(created_at.getTime() + 100))\n        .build(),\n      Tenant.fake()\n        .aTenant()\n        .withName('fake')\n        .withCreatedAt(new Date(created_at.getTime() + 200))\n        .build(),\n    ];\n\n    const itemsSorted = await repository['applySort'](items, null, null);\n    expect(itemsSorted).toStrictEqual([items[2], items[1], items[0]]);\n  });\n\n  it('should sort by name', async () => {\n    const items = [\n      Tenant.fake().aTenant().withName('c').build(),\n      Tenant.fake().aTenant().withName('b').build(),\n      Tenant.fake().aTenant().withName('a').build(),\n    ];\n\n    let itemsSorted = await repository['applySort'](items, 'name', 'asc');\n    expect(itemsSorted).toStrictEqual([items[2], items[1], items[0]]);\n\n    itemsSorted = await repository['applySort'](items, 'name', 'desc');\n    expect(itemsSorted).toStrictEqual([items[0], items[1], items[2]]);\n  });\n});"],"names":["describe","repository","beforeEach","TenantInMemoryRepository","it","items","Tenant","fake","aTenant","build","filterSpy","jest","spyOn","itemsFiltered","expect","not","toHaveBeenCalled","toStrictEqual","withName","toHaveBeenCalledTimes","created_at","Date","withCreatedAt","getTime","itemsSorted"],"mappings":";;;;8BAAuB;0CACkB;AAEzCA,SAAS,4BAA4B;IACnC,IAAIC;IAEJC,WAAW,IAAOD,aAAa,IAAIE,kDAAwB;IAC3DC,GAAG,qDAAqD;QACtD,MAAMC,QAAQ;YAACC,oBAAM,CAACC,IAAI,GAAGC,OAAO,GAAGC,KAAK;SAAG;QAC/C,MAAMC,YAAYC,KAAKC,KAAK,CAACP,OAAO;QAEpC,MAAMQ,gBAAgB,MAAMZ,UAAU,CAAC,cAAc,CAACI,OAAO;QAC7DS,OAAOJ,WAAWK,GAAG,CAACC,gBAAgB;QACtCF,OAAOD,eAAeI,aAAa,CAACZ;IACtC;IAEAD,GAAG,8CAA8C;QAC/C,MAAMC,QAAQ;YACZC,oBAAM,CAACC,IAAI,GAAGC,OAAO,GAAGU,QAAQ,CAAC,QAAQT,KAAK;YAC9CH,oBAAM,CAACC,IAAI,GAAGC,OAAO,GAAGU,QAAQ,CAAC,QAAQT,KAAK;YAC9CH,oBAAM,CAACC,IAAI,GAAGC,OAAO,GAAGU,QAAQ,CAAC,QAAQT,KAAK;SAC/C;QACD,MAAMC,YAAYC,KAAKC,KAAK,CAACP,OAAO;QAEpC,MAAMQ,gBAAgB,MAAMZ,UAAU,CAAC,cAAc,CAACI,OAAO;QAC7DS,OAAOJ,WAAWS,qBAAqB,CAAC;QACxCL,OAAOD,eAAeI,aAAa,CAAC;YAACZ,KAAK,CAAC,EAAE;YAAEA,KAAK,CAAC,EAAE;SAAC;IAC1D;IAEAD,GAAG,qDAAqD;QACtD,MAAMgB,aAAa,IAAIC;QAEvB,MAAMhB,QAAQ;YACZC,oBAAM,CAACC,IAAI,GACRC,OAAO,GACPU,QAAQ,CAAC,QACTI,aAAa,CAACF,YACdX,KAAK;YACRH,oBAAM,CAACC,IAAI,GACRC,OAAO,GACPU,QAAQ,CAAC,QACTI,aAAa,CAAC,IAAID,KAAKD,WAAWG,OAAO,KAAK,MAC9Cd,KAAK;YACRH,oBAAM,CAACC,IAAI,GACRC,OAAO,GACPU,QAAQ,CAAC,QACTI,aAAa,CAAC,IAAID,KAAKD,WAAWG,OAAO,KAAK,MAC9Cd,KAAK;SACT;QAED,MAAMe,cAAc,MAAMvB,UAAU,CAAC,YAAY,CAACI,OAAO,MAAM;QAC/DS,OAAOU,aAAaP,aAAa,CAAC;YAACZ,KAAK,CAAC,EAAE;YAAEA,KAAK,CAAC,EAAE;YAAEA,KAAK,CAAC,EAAE;SAAC;IAClE;IAEAD,GAAG,uBAAuB;QACxB,MAAMC,QAAQ;YACZC,oBAAM,CAACC,IAAI,GAAGC,OAAO,GAAGU,QAAQ,CAAC,KAAKT,KAAK;YAC3CH,oBAAM,CAACC,IAAI,GAAGC,OAAO,GAAGU,QAAQ,CAAC,KAAKT,KAAK;YAC3CH,oBAAM,CAACC,IAAI,GAAGC,OAAO,GAAGU,QAAQ,CAAC,KAAKT,KAAK;SAC5C;QAED,IAAIe,cAAc,MAAMvB,UAAU,CAAC,YAAY,CAACI,OAAO,QAAQ;QAC/DS,OAAOU,aAAaP,aAAa,CAAC;YAACZ,KAAK,CAAC,EAAE;YAAEA,KAAK,CAAC,EAAE;YAAEA,KAAK,CAAC,EAAE;SAAC;QAEhEmB,cAAc,MAAMvB,UAAU,CAAC,YAAY,CAACI,OAAO,QAAQ;QAC3DS,OAAOU,aAAaP,aAAa,CAAC;YAACZ,KAAK,CAAC,EAAE;YAAEA,KAAK,CAAC,EAAE;YAAEA,KAAK,CAAC,EAAE;SAAC;IAClE;AACF"}