{"version":3,"sources":["../../../../../../src/core/shared/infra/db/in-memory/in-memory.repository.ts"],"sourcesContent":["import { Entity } from '../../../domain/entity';\nimport { NotFoundError } from '../../../domain/errors/not-found.error';\nimport {\n  IRepository,\n  ISearchableRepository,\n} from '../../../domain/repository/repository-interface';\nimport { SearchParams } from '../../../domain/repository/search-params';\nimport { SearchResult } from '../../../domain/repository/search-result';\nimport { ValueObject } from '../../../domain/value-object';\n\nexport abstract class InMemoryRepository<\n  E extends Entity,\n  EntityId extends ValueObject,\n> implements IRepository<E, EntityId>\n{\n  items: E[] = [];\n\n  async insert(entity: E): Promise<void> {\n    this.items.push(entity);\n  }\n  async bulkInsert(entities: E[]): Promise<void> {\n    this.items.push(...entities);\n  }\n  async update(entity: E): Promise<void> {\n    const indexFound = this.items.findIndex((item) =>\n      item.entity_id.equals(entity.entity_id),\n    );\n    if (indexFound === -1) {\n      throw new NotFoundError(entity.entity_id, this.getEntity());\n    }\n    this.items[indexFound] = entity;\n  }\n  async delete(entity_id: EntityId): Promise<void> {\n    const indexFound = this.items.findIndex((item) =>\n      item.entity_id.equals(entity_id),\n    );\n    if (indexFound === -1) {\n      throw new NotFoundError(entity_id, this.getEntity());\n    }\n    this.items.splice(indexFound, 1);\n  }\n  async findById(entity_id: EntityId): Promise<E> {\n    return this._get(entity_id);\n  }\n\n  protected _get(entity_id: EntityId) {\n    const item = this.items.find((item) => item.entity_id.equals(entity_id));\n    return typeof item === 'undefined' ? null : item;\n  }\n\n  async findAll(): Promise<E[]> {\n    return this.items;\n  }\n  abstract getEntity(): new (...args: any[]) => E;\n}\n\nexport abstract class InMemorySearchableRepository<\n    E extends Entity,\n    EntityId extends ValueObject,\n    Filter = string,\n  >\n  extends InMemoryRepository<E, EntityId>\n  implements ISearchableRepository<E, EntityId, Filter>\n{\n  sortableFields: string[] = [];\n  async search(props: SearchParams<Filter>): Promise<SearchResult<E>> {\n    const itemsFiltered = await this.applyFilter(this.items, props.filter);\n    const itemsSorted = this.applySort(\n      itemsFiltered,\n      props.sort,\n      props.sort_dir,\n    );\n    const itemsPaginated = this.applyPaginate(\n      itemsSorted,\n      props.page,\n      props.per_page,\n    );\n\n    return new SearchResult({\n      items: itemsPaginated,\n      total: itemsFiltered.length,\n      current_page: props.page,\n      per_page: props.per_page,\n      last_page: Math.ceil(itemsFiltered.length / props.per_page),\n    });\n  }\n\n  protected abstract applyFilter(\n    items: E[],\n    filter: Filter | null,\n  ): Promise<E[]>;\n\n  protected applyPaginate(\n    items: E[],\n    page: SearchParams['page'],\n    per_page: SearchParams['per_page'],\n  ): E[] {\n    const start = (page - 1) * per_page;\n    const limit = start + per_page;\n    return items.slice(start, limit);\n  }\n\n  protected applySort(\n    items: E[],\n    sort: SearchParams['sort'],\n    sort_dir: SearchParams['sort_dir'],\n    custom_getter?: (sort: string, item: E) => any,\n  ) {\n    if (!sort || !this.sortableFields.includes(sort)) {\n      return items;\n    }\n    return [...items].sort((a, b) => {\n      const aValue = custom_getter ? custom_getter(sort, a) : a[sort];\n      const bValue = custom_getter ? custom_getter(sort, b) : b[sort];\n      if (aValue < bValue) {\n        return sort_dir === 'asc' ? -1 : 1;\n      }\n      if (aValue > bValue) {\n        return sort_dir === 'asc' ? 1 : -1;\n      }\n\n      return 0;\n    });\n  }\n}\n"],"names":["InMemoryRepository","InMemorySearchableRepository","insert","entity","items","push","bulkInsert","entities","update","indexFound","findIndex","item","entity_id","equals","NotFoundError","getEntity","delete","splice","findById","_get","find","findAll","search","props","itemsFiltered","applyFilter","filter","itemsSorted","applySort","sort","sort_dir","itemsPaginated","applyPaginate","page","per_page","SearchResult","total","length","current_page","last_page","Math","ceil","start","limit","slice","custom_getter","sortableFields","includes","a","b","aValue","bValue"],"mappings":"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"}