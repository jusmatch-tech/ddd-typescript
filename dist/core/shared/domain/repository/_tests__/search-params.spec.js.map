{"version":3,"sources":["../../../../../../src/core/shared/domain/repository/_tests__/search-params.spec.ts"],"sourcesContent":["import { SearchParams } from \"../search-params\";\n\ndescribe('SearchParams Unit Tests', () => {\n  test('page prop', () => {\n    const params = new SearchParams({});\n    expect(params.page).toBe(1);\n\n    const arrange = [\n      { page: null, expected: 1 },\n      { page: undefined, expected: 1 },\n      { page: '', expected: 1 },\n      { page: 'fake', expected: 1 },\n      { page: 0, expected: 1 },\n      { page: '1', expected: 1 },\n      { page: '1.1', expected: 1 },\n      { page: '1.9', expected: 1 },\n      { page: '1.0', expected: 1 },\n      { page: '0', expected: 1 },\n      { page: '0.1', expected: 1 },\n      { page: '0.9', expected: 1 },\n      { page: '0.0', expected: 1 },\n      { page: -1, expected: 1 },\n      { page: true, expected: 1 },\n      { page: false, expected: 1 },\n      { page: {}, expected: 1 },\n\n      { page: 1, expected: 1 },\n      { page: 2, expected: 2 },\n\n    ];\n    \n    arrange.forEach((i) => {\n      expect(new SearchParams({ page:i.page as any}).page).toBe(i.expected);\n    });\n  });\n\n  test('per_page prop', () => {\n    const params = new SearchParams();\n    expect(params.per_page).toBe(15);\n\n    //TODO refactor to test.each\n    const arrange = [\n      { per_page: null, expected: 15 },\n      { per_page: undefined, expected: 15 },\n      { per_page: '', expected: 15 },\n      { per_page: 'fake', expected: 15 },\n      { per_page: 0, expected: 15 },\n      { per_page: -1, expected: 15 },\n      { per_page: 5.5, expected: 15 },\n      { per_page: true, expected: 15 },\n      { per_page: false, expected: 15 },\n      { per_page: {}, expected: 15 },\n\n      { per_page: 1, expected: 1 },\n      { per_page: 2, expected: 2 },\n      { per_page: 10, expected: 10 },\n    ];\n\n    arrange.forEach((i) => {\n      expect(new SearchParams({ per_page: i.per_page as any }).per_page).toBe(\n        i.expected,\n      );\n    });\n  });\n\n  test('sort prop', () => {\n    const params = new SearchParams();\n    expect(params.sort).toBeNull();\n\n    //TODO refactor to test.each\n    const arrange = [\n      { sort: null, expected: null },\n      { sort: undefined, expected: null },\n      { sort: '', expected: null },\n      { sort: 0, expected: '0' },\n      { sort: -1, expected: '-1' },\n      { sort: 5.5, expected: '5.5' },\n      { sort: true, expected: 'true' },\n      { sort: false, expected: 'false' },\n      { sort: {}, expected: '[object Object]' },\n      { sort: 'field', expected: 'field' },\n    ];\n\n    arrange.forEach((i) => {\n      expect(new SearchParams({ sort: i.sort as any }).sort).toBe(i.expected);\n    });\n  });\n\n  test('sort_dir prop', () => {\n    let params = new SearchParams();\n    expect(params.sort_dir).toBeNull();\n\n    params = new SearchParams({ sort: null });\n    expect(params.sort_dir).toBeNull();\n\n    params = new SearchParams({ sort: undefined });\n    expect(params.sort_dir).toBeNull();\n\n    params = new SearchParams({ sort: '' });\n    expect(params.sort_dir).toBeNull();\n\n    //TODO refactor to test.each\n    const arrange = [\n      { sort_dir: null, expected: 'asc' },\n      { sort_dir: undefined, expected: 'asc' },\n      { sort_dir: '', expected: 'asc' },\n      { sort_dir: 0, expected: 'asc' },\n      { sort_dir: 'fake', expected: 'asc' },\n\n      { sort_dir: 'asc', expected: 'asc' },\n      { sort_dir: 'ASC', expected: 'asc' },\n      { sort_dir: 'desc', expected: 'desc' },\n      { sort_dir: 'DESC', expected: 'desc' },\n    ];\n\n    arrange.forEach((i) => {\n      expect(\n        new SearchParams({ sort: 'field', sort_dir: i.sort_dir as any })\n          .sort_dir,\n      ).toBe(i.expected);\n    });\n  });\n\n  test('filter prop', () => {\n    const params = new SearchParams();\n    expect(params.filter).toBeNull();\n\n    //TODO refactor to test.each\n    const arrange = [\n      { filter: null, expected: null },\n      { filter: undefined, expected: null },\n      { filter: '', expected: null },\n\n      { filter: 0, expected: '0' },\n      { filter: -1, expected: '-1' },\n      { filter: 5.5, expected: '5.5' },\n      { filter: true, expected: 'true' },\n      { filter: false, expected: 'false' },\n      { filter: {}, expected: '[object Object]' },\n      { filter: 'field', expected: 'field' },\n    ];\n\n    arrange.forEach((i) => {\n      expect(new SearchParams({ filter: i.filter as any }).filter).toBe(\n        i.expected,\n      );\n    });\n  });\n});"],"names":["describe","test","params","SearchParams","expect","page","toBe","arrange","expected","undefined","forEach","i","per_page","sort","toBeNull","sort_dir","filter"],"mappings":"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"}